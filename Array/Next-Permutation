class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        
        len_nums = len(nums)
        for i in range(len_nums-1, 0, -1):
            if nums[i] > nums[i-1]:

                diff = 999999999
                for j in range(i, len_nums, 1):
                    if nums[j] - nums[i-1] > 0 and nums[j] - nums[i-1] < diff:
                        diff = nums[j] - nums[i-1]
                        index = j
                
                temp = nums[i-1]
                nums[i-1] = nums[i-1] + diff
                nums[index] = temp
                
                nums[i:] = sorted(nums[i:])
                                
                return True
                
            
        nums.sort()
        
        if nums[0] != 0:
            return True
        
        initial_zeroes_Exist = True
        while initial_zeroes_Exist:
            if nums[0] == 0:
                nums.pop()
            else:
                return True
